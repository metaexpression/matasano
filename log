matasano> (hex-to-octet x)
#(39 76 16 18 26 1 0 73 91 80 45 85 28 85 127 11 8 51 88 93 27 39 3 11 82 40 4
  13 55 83 73 10 28 2 84 21 5 21 37 69 81 24 0 25 17 83 74 0 82 86 10 20 89 79
  11 30 73 10 1 12 69 20 65 30 7 0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10
  26 76 65 77 31 29 23 29 0 21 27 29 15 72 14 73 30 2 73 1 12 21 0 80 17 92 80
  88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13 68 68 37 70 67)
matasano> (setf x *)
#(39 76 16 18 26 1 0 73 91 80 45 85 28 85 127 11 8 51 88 93 27 39 3 11 82 40 4
  13 55 83 73 10 28 2 84 21 5 21 37 69 81 24 0 25 17 83 74 0 82 86 10 20 89 79
  11 30 73 10 1 12 69 20 65 30 7 0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10
  26 76 65 77 31 29 23 29 0 21 27 29 15 72 14 73 30 2 73 1 12 21 0 80 17 92 80
  88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13 68 68 37 70 67)
matasano> (subseq x (- (length x) 32))
#(0 80 17 92 80 88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13
  68 68 37 70 67)
matasano> (defparameter h *)
h
matasano> (ribbonize-blocks h 9)
(#(0 3 11 68) #(80 66 94 68) #(17 19 9 37) #(92 84 77 70) #(80 66 20 67)
 #(88 76 73) #(80 17 87) #(67 80 8) #(66 67 13))
matasano> (octet-to-hex h)
"0050115C505850434203421354424C1150430B5E094D144957080D4444254643"
matasano> (iter (for n in h) (counting (> n #x25)))
; Evaluation aborted on #<type-error expected-type: "list"datum: #<(simple-vector 32) {100457C2BF}>>.
matasano> (iter (for n across h) (counting (> n #x25)))
; Evaluation aborted on #<simple-error "Iterate~@[, in ~a~]:~%Unknown keyword ~a" {1004E991A3}>.
matasano> (iter (for n in-sequence h) (counting (> n #x25)))
21
matasano> (iter (for n in-sequence h) (counting (< n #x25)))
10
matasano> (iter (for n in-sequence h) (counting (=< n #x25)))
; in: iter (for n in-sequence h)
;     (MATASANO::=< MATASANO::N 37)
; 
; caught style-warning:
;   undefined function: =<
; 
; compilation unit finished
;   Undefined function:
;     =<
;   caught 1 STYLE-WARNING condition
; Evaluation aborted on #<undefined-function =< {10051AEAE3}>.
matasano> (iter (for n in-sequence h) (counting (<= n #x25)))
11
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 9))
("00030B44" "50425E44" "11130925" "5C544D46" "50421443" "584C49" "501157"
 "435008" "42430D")
matasano> (xor-decrypt (str-to-octet "abdefhijklmnopqrstuvwxyz") (str-to-octet "0123456789"))
(81 83 86 86 82 93 95 93 83 85 93 95 93 67 69 71 69 67 77 79 71 73 75 73)
matasano> (octet-to-hex *)
"51535656525D5F5D53555D5F5D43454745434D4F47494B49"
matasano> (xor-decrypt (str-to-octet "abdefhijklmnopqrstuvwxyz") (str-to-octet "abdefhijklmnopqrstuvwxyz"))
(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
matasano> (xor-decrypt (str-to-octet "abdefhijklmnopqrstuvwxyz") (str-to-octet "z"))
(27 24 30 31 28 18 19 16 17 22 23 20 21 10 11 8 9 14 15 12 13 2 3 0)
matasano> (octet-to-hex *)
"1B181E1F1C12131011161714150A0B08090E0F0C0D020300"
matasano> 
; No value
matasano> #x25
37
matasano> (iter (for a in-string "abdefhijklmnopqrstuvwxyz")
					 (xor-decrypt (str-to-octet "abcdef") (string-to-octet (string a))))
; Evaluation aborted on #<simple-type-error expected-type: "integer"datum: #\a>.
matasano> (iter (for a in-string "abdefhijklmnopqrstuvwxyz")
					 (xor-decrypt (str-to-octet "abcdef") (str-to-octet (string a))))
nil
matasano> (iter (for a in-string "abdefhijklmnopqrstuvwxyz")
					 (collect (xor-decrypt (str-to-octet "abcdef") (str-to-octet (string a)))))
((0 3 2 5 4 7) (3 0 1 6 7 4) (5 6 7 0 1 2) (4 7 6 1 0 3) (7 4 5 2 3 0)
 (9 10 11 12 13 14) (8 11 10 13 12 15) (11 8 9 14 15 12) (10 9 8 15 14 13)
 (13 14 15 8 9 10) (12 15 14 9 8 11) (15 12 13 10 11 8) (14 13 12 11 10 9)
 (17 18 19 20 21 22) (16 19 18 21 20 23) (19 16 17 22 23 20)
 (18 17 16 23 22 21) (21 22 23 16 17 18) (20 23 22 17 16 19)
 (23 20 21 18 19 16) (22 21 20 19 18 17) (25 26 27 28 29 30)
 (24 27 26 29 28 31) (27 24 25 30 31 28))
matasano> (mapcar #'octet-to-hex *)
("000302050407" "030001060704" "050607000102" "040706010003" "070405020300"
 "090A0B0C0D0E" "080B0A0D0C0F" "0B08090E0F0C" "0A09080F0E0D" "0D0E0F08090A"
 "0C0F0E09080B" "0F0C0D0A0B08" "0E0D0C0B0A09" "111213141516" "101312151417"
 "131011161714" "121110171615" "151617101112" "141716111013" "171415121310"
 "161514131211" "191A1B1C1D1E" "181B1A1D1C1F" "1B18191E1F1C")
matasano> 
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 10))
("00420946" "50134D43" "115414" "5C4249" "504C57" "581108" "50500D" "434344"
 "420B44" "035E25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 3))
("005C500354110B4D574446" "5050434242505E14084443" "115842134C4309490D25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 4))
("0050425450095744" "50580342434D0825" "1150424C0B140D46" "5C4313115E494443")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 8))
("00425057" "50034308" "11420B0D" "5C135E44" "50540944" "58424D25" "504C1446"
 "43114943")
matasano> (iter (for a in-string "abdefhijklmnopqrstuvwxyz")
					 (collect (xor-decrypt (str-to-octet "0123456789") (str-to-octet (string a)))))
((81 80 83 82 85 84 87 86 89 88) (82 83 80 81 86 87 84 85 90 91)
 (84 85 86 87 80 81 82 83 92 93) (85 84 87 86 81 80 83 82 93 92)
 (86 87 84 85 82 83 80 81 94 95) (88 89 90 91 92 93 94 95 80 81)
 (89 88 91 90 93 92 95 94 81 80) (90 91 88 89 94 95 92 93 82 83)
 (91 90 89 88 95 94 93 92 83 82) (92 93 94 95 88 89 90 91 84 85)
 (93 92 95 94 89 88 91 90 85 84) (94 95 92 93 90 91 88 89 86 87)
 (95 94 93 92 91 90 89 88 87 86) (64 65 66 67 68 69 70 71 72 73)
 (65 64 67 66 69 68 71 70 73 72) (66 67 64 65 70 71 68 69 74 75)
 (67 66 65 64 71 70 69 68 75 74) (68 69 70 71 64 65 66 67 76 77)
 (69 68 71 70 65 64 67 66 77 76) (70 71 68 69 66 67 64 65 78 79)
 (71 70 69 68 67 66 65 64 79 78) (72 73 74 75 76 77 78 79 64 65)
 (73 72 75 74 77 76 79 78 65 64) (74 75 72 73 78 79 76 77 66 67))
matasano> (mapcar #'octet-to-hex *)
("51505352555457565958" "52535051565754555A5B" "54555657505152535C5D"
 "55545756515053525D5C" "56575455525350515E5F" "58595A5B5C5D5E5F5051"
 "59585B5A5D5C5F5E5150" "5A5B58595E5F5C5D5253" "5B5A59585F5E5D5C5352"
 "5C5D5E5F58595A5B5455" "5D5C5F5E59585B5A5554" "5E5F5C5D5A5B58595657"
 "5F5E5D5C5B5A59585756" "40414243444546474849" "41404342454447464948"
 "42434041464744454A4B" "43424140474645444B4A" "44454647404142434C4D"
 "45444746414043424D4C" "46474445424340414E4F" "47464544434241404F4E"
 "48494A4B4C4D4E4F4041" "49484B4A4D4C4F4E4140" "4A4B48494E4F4C4D4243")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 13))
("00420D" "504C44" "111144" "5C5025" "504346" "580B43" "505E" "4309" "424D"
 "0314" "4249" "1357" "5408")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 14))
("004C44" "501125" "115046" "5C4343" "500B" "585E" "5009" "434D" "4214" "0349"
 "4257" "1308" "540D" "4244")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 15))
("001146" "505043" "1143" "5C0B" "505E" "5809" "504D" "4314" "4249" "0357"
 "4208" "130D" "5444" "4244" "4C25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 16))
("0050" "5043" "110B" "5C5E" "5009" "584D" "5014" "4349" "4257" "0308" "420D"
 "1344" "5444" "4225" "4C46" "1143")
matasano> (make-frequency-table h)
#<hash-table :TEST equalp :COUNT 23 {100772A063}>
matasano> (iter (for a in-string (string-upcase "abdefhijklmnopqrstuvwxyz"))
					 (collect (xor-decrypt (str-to-octet "abcdef") (str-to-octet (string a)))))
((32 35 34 37 36 39) (35 32 33 38 39 36) (37 38 39 32 33 34)
 (36 39 38 33 32 35) (39 36 37 34 35 32) (41 42 43 44 45 46)
 (40 43 42 45 44 47) (43 40 41 46 47 44) (42 41 40 47 46 45)
 (45 46 47 40 41 42) (44 47 46 41 40 43) (47 44 45 42 43 40)
 (46 45 44 43 42 41) (49 50 51 52 53 54) (48 51 50 53 52 55)
 (51 48 49 54 55 52) (50 49 48 55 54 53) (53 54 55 48 49 50)
 (52 55 54 49 48 51) (55 52 53 50 51 48) (54 53 52 51 50 49)
 (57 58 59 60 61 62) (56 59 58 61 60 63) (59 56 57 62 63 60))
matasano> (mapcar #'octet-to-hex *)
("202322252427" "232021262724" "252627202122" "242726212023" "272425222320"
 "292A2B2C2D2E" "282B2A2D2C2F" "2B28292E2F2C" "2A29282F2E2D" "2D2E2F28292A"
 "2C2F2E29282B" "2F2C2D2A2B28" "2E2D2C2B2A29" "313233343536" "303332353437"
 "333031363734" "323130373635" "353637303132" "343736313033" "373435323330"
 "363534333231" "393A3B3C3D3E" "383B3A3D3C3F" "3B38393E3F3C")
matasano> (iter (for a in-string (string-upcase "abdefhijklmnopqrstuvwxyz"))
					 (collect (xor-decrypt (str-to-octet "0123456789") (str-to-octet (string a)))))
((113 112 115 114 117 116 119 118 121 120)
 (114 115 112 113 118 119 116 117 122 123)
 (116 117 118 119 112 113 114 115 124 125)
 (117 116 119 118 113 112 115 114 125 124)
 (118 119 116 117 114 115 112 113 126 127)
 (120 121 122 123 124 125 126 127 112 113)
 (121 120 123 122 125 124 127 126 113 112)
 (122 123 120 121 126 127 124 125 114 115)
 (123 122 121 120 127 126 125 124 115 114)
 (124 125 126 127 120 121 122 123 116 117)
 (125 124 127 126 121 120 123 122 117 116)
 (126 127 124 125 122 123 120 121 118 119)
 (127 126 125 124 123 122 121 120 119 118)
 (96 97 98 99 100 101 102 103 104 105) (97 96 99 98 101 100 103 102 105 104)
 (98 99 96 97 102 103 100 101 106 107) (99 98 97 96 103 102 101 100 107 106)
 (100 101 102 103 96 97 98 99 108 109) (101 100 103 102 97 96 99 98 109 108)
 (102 103 100 101 98 99 96 97 110 111) (103 102 101 100 99 98 97 96 111 110)
 (104 105 106 107 108 109 110 111 96 97)
 (105 104 107 106 109 108 111 110 97 96)
 (106 107 104 105 110 111 108 109 98 99))
matasano> (mapcar #'octet-to-hex *)
("71707372757477767978" "72737071767774757A7B" "74757677707172737C7D"
 "75747776717073727D7C" "76777475727370717E7F" "78797A7B7C7D7E7F7071"
 "79787B7A7D7C7F7E7170" "7A7B78797E7F7C7D7273" "7B7A79787F7E7D7C7372"
 "7C7D7E7F78797A7B7475" "7D7C7F7E79787B7A7574" "7E7F7C7D7A7B78797677"
 "7F7E7D7C7B7A79787776" "60616263646566676869" "61606362656467666968"
 "62636061666764656A6B" "63626160676665646B6A" "64656667606162636C6D"
 "65646766616063626D6C" "66676465626360616E6F" "67666564636261606F6E"
 "68696A6B6C6D6E6F6061" "69686B6A6D6C6F6E6160" "6A6B68696E6F6C6D6263")
matasano> (iter (for a in-string (string-upcase "0123456789"))
					 (collect (xor-decrypt (str-to-octet "0123456789") (str-to-octet (string a)))))
((0 1 2 3 4 5 6 7 8 9) (1 0 3 2 5 4 7 6 9 8) (2 3 0 1 6 7 4 5 10 11)
 (3 2 1 0 7 6 5 4 11 10) (4 5 6 7 0 1 2 3 12 13) (5 4 7 6 1 0 3 2 13 12)
 (6 7 4 5 2 3 0 1 14 15) (7 6 5 4 3 2 1 0 15 14) (8 9 10 11 12 13 14 15 0 1)
 (9 8 11 10 13 12 15 14 1 0))
matasano> (mapcar #'octet-to-hex *)
("00010203040506070809" "01000302050407060908" "02030001060704050A0B"
 "03020100070605040B0A" "04050607000102030C0D" "05040706010003020D0C"
 "06070405020300010E0F" "07060504030201000F0E" "08090A0B0C0D0E0F0001"
 "09080B0A0D0C0F0E0100")
matasano> (iter (for a in-string (string-upcase "0123456789"))
					 (collect (xor-decrypt (str-to-octet "abdefhijklmnopqrstuvwxyz") (str-to-octet (string a)))))
((81 82 84 85 86 88 89 90 91 92 93 94 95 64 65 66 67 68 69 70 71 72 73 74)
 (80 83 85 84 87 89 88 91 90 93 92 95 94 65 64 67 66 69 68 71 70 73 72 75)
 (83 80 86 87 84 90 91 88 89 94 95 92 93 66 67 64 65 70 71 68 69 74 75 72)
 (82 81 87 86 85 91 90 89 88 95 94 93 92 67 66 65 64 71 70 69 68 75 74 73)
 (85 86 80 81 82 92 93 94 95 88 89 90 91 68 69 70 71 64 65 66 67 76 77 78)
 (84 87 81 80 83 93 92 95 94 89 88 91 90 69 68 71 70 65 64 67 66 77 76 79)
 (87 84 82 83 80 94 95 92 93 90 91 88 89 70 71 68 69 66 67 64 65 78 79 76)
 (86 85 83 82 81 95 94 93 92 91 90 89 88 71 70 69 68 67 66 65 64 79 78 77)
 (89 90 92 93 94 80 81 82 83 84 85 86 87 72 73 74 75 76 77 78 79 64 65 66)
 (88 91 93 92 95 81 80 83 82 85 84 87 86 73 72 75 74 77 76 79 78 65 64 67))
matasano> (mapcar #'octet-to-hex *)
("515254555658595A5B5C5D5E5F404142434445464748494A"
 "505355545759585B5A5D5C5F5E414043424544474649484B"
 "53505657545A5B58595E5F5C5D42434041464744454A4B48"
 "52515756555B5A59585F5E5D5C43424140474645444B4A49"
 "55565051525C5D5E5F58595A5B44454647404142434C4D4E"
 "54575150535D5C5F5E59585B5A45444746414043424D4C4F"
 "57545253505E5F5C5D5A5B585946474445424340414E4F4C"
 "56555352515F5E5D5C5B5A595847464544434241404F4E4D"
 "595A5C5D5E505152535455565748494A4B4C4D4E4F404142"
 "585B5D5C5F515053525554575649484B4A4D4C4F4E414043")
matasano> (iter (for a in-string (string-upcase "0123456789"))
					 (collect (xor-decrypt (str-to-octet "abcdef") (str-to-octet (string a)))))
((81 82 83 84 85 86) (80 83 82 85 84 87) (83 80 81 86 87 84)
 (82 81 80 87 86 85) (85 86 87 80 81 82) (84 87 86 81 80 83)
 (87 84 85 82 83 80) (86 85 84 83 82 81) (89 90 91 92 93 94)
 (88 91 90 93 92 95))
matasano> (mapcar #'octet-to-hex *)
("515253545556" "505352555457" "535051565754" "525150575655" "555657505152"
 "545756515053" "575455525350" "565554535251" "595A5B5C5D5E" "585B5A5D5C5F")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 3))
("005C500354110B4D574446" "5050434242505E14084443" "115842134C4309490D25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 6))
("0050540B5746" "5043425E0843" "11424C090D" "5C03114D44" "5042501444"
 "5813434925")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 4))
("0050425450095744" "50580342434D0825" "1150424C0B140D46" "5C4313115E494443")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 5))
("00584211090846" "505013504D0D43" "114354431444" "5C42420B4944" "50034C5E5725")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 7))
("00434C4D44" "5042111425" "1103504946" "5C42435743" "50130B08" "58545E0D"
 "50420944")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 8))
("00425057" "50034308" "11420B0D" "5C135E44" "50540944" "58424D25" "504C1446"
 "43114943")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 9))
("00030B44" "50425E44" "11130925" "5C544D46" "50421443" "584C49" "501157"
 "435008" "42430D")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 10))
("00420946" "50134D43" "115414" "5C4249" "504C57" "581108" "50500D" "434344"
 "420B44" "035E25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 12))
("005457" "504208" "114C0D" "5C1144" "505044" "584325" "500B46" "435E43" "4209"
 "034D" "4214" "1349")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 13))
("00420D" "504C44" "111144" "5C5025" "504346" "580B43" "505E" "4309" "424D"
 "0314" "4249" "1357" "5408")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 14))
("004C44" "501125" "115046" "5C4343" "500B" "585E" "5009" "434D" "4214" "0349"
 "4257" "1308" "540D" "4244")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 15))
("001146" "505043" "1143" "5C0B" "505E" "5809" "504D" "4314" "4249" "0357"
 "4208" "130D" "5444" "4244" "4C25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 16))
("0050" "5043" "110B" "5C5E" "5009" "584D" "5014" "4349" "4257" "0308" "420D"
 "1344" "5444" "4225" "4C46" "1143")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 17))
("0043" "500B" "115E" "5C09" "504D" "5814" "5049" "4357" "4208" "030D" "4244"
 "1344" "5425" "4246" "4C43" "11" "50")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 18))
("000B" "505E" "1109" "5C4D" "5014" "5849" "5057" "4308" "420D" "0344" "4244"
 "1325" "5446" "4243" "4C" "11" "50" "43")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 19))
("005E" "5009" "114D" "5C14" "5049" "5857" "5008" "430D" "4244" "0344" "4225"
 "1346" "5443" "42" "4C" "11" "50" "43" "0B")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 20))
("0009" "504D" "1114" "5C49" "5057" "5808" "500D" "4344" "4244" "0325" "4246"
 "1343" "54" "42" "4C" "11" "50" "43" "0B" "5E")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 21))
("004D" "5014" "1149" "5C57" "5008" "580D" "5044" "4344" "4225" "0346" "4243"
 "13" "54" "42" "4C" "11" "50" "43" "0B" "5E" "09")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 22))
("0014" "5049" "1157" "5C08" "500D" "5844" "5044" "4325" "4246" "0343" "42"
 "13" "54" "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 23))
("0049" "5057" "1108" "5C0D" "5044" "5844" "5025" "4346" "4243" "03" "42" "13"
 "54" "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 24))
("0057" "5008" "110D" "5C44" "5044" "5825" "5046" "4343" "42" "03" "42" "13"
 "54" "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 25))
("0008" "500D" "1144" "5C44" "5025" "5846" "5043" "43" "42" "03" "42" "13" "54"
 "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 26))
("000D" "5044" "1144" "5C25" "5046" "5843" "50" "43" "42" "03" "42" "13" "54"
 "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 27))
("0044" "5044" "1125" "5C46" "5043" "58" "50" "43" "42" "03" "42" "13" "54"
 "42" "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08" "0D")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 28))
("0044" "5025" "1146" "5C43" "50" "58" "50" "43" "42" "03" "42" "13" "54" "42"
 "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08" "0D" "44")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 29))
("0025" "5046" "1143" "5C" "50" "58" "50" "43" "42" "03" "42" "13" "54" "42"
 "4C" "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08" "0D" "44" "44")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 30))
("0046" "5043" "11" "5C" "50" "58" "50" "43" "42" "03" "42" "13" "54" "42" "4C"
 "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08" "0D" "44" "44" "25")
matasano> (mapcar #'octet-to-hex (ribbonize-blocks h 31))
("0043" "50" "11" "5C" "50" "58" "50" "43" "42" "03" "42" "13" "54" "42" "4C"
 "11" "50" "43" "0B" "5E" "09" "4D" "14" "49" "57" "08" "0D" "44" "44" "25"
 "46")
matasano> x
#(39 76 16 18 26 1 0 73 91 80 45 85 28 85 127 11 8 51 88 93 27 39 3 11 82 40 4
  13 55 83 73 10 28 2 84 21 5 21 37 69 81 24 0 25 17 83 74 0 82 86 10 20 89 79
  11 30 73 10 1 12 69 20 65 30 7 0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10
  26 76 65 77 31 29 23 29 0 21 27 29 15 72 14 73 30 2 73 1 12 21 0 80 17 92 80
  88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13 68 68 37 70 67)
matasano> (octet-to-hex x)
"274C10121A0100495B502D551C557F0B0833585D1B27030B5228040D3753490A1C025415051525455118001911534A0052560A14594F0B1E490A010C4514411E070014615A181B02521B580305170002074B0A1A4C414D1F1D171D00151B1D0F480E491E0249010C150050115C505850434203421354424C1150430B5E094D144957080D4444254643"
matasano> (iter (for i from 0 to (length x) by 2) (collecting (char (octet-to-hex x) i)))
(#\2 #\4 #\1 #\1 #\1 #\0 #\0 #\4 #\5 #\5 #\2 #\5 #\1 #\5 #\7 #\0 #\0 #\3 #\5
 #\5 #\1 #\2 #\0 #\0 #\5 #\2 #\0 #\0 #\3 #\5 #\4 #\0 #\1 #\0 #\5 #\1 #\0 #\1
 #\2 #\4 #\5 #\1 #\0 #\1 #\1 #\5 #\4 #\0 #\5 #\5 #\0 #\1 #\5 #\4 #\0 #\1 #\4
 #\0 #\0 #\0 #\4 #\1 #\4 #\1 #\0 #\0 #\1 #\6 #\5)
matasano> h
#(0 80 17 92 80 88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13
  68 68 37 70 67)
matasano> (octet-to-hex h)
"0050115C505850434203421354424C1150430B5E094D144957080D4444254643"
matasano> x
#(39 76 16 18 26 1 0 73 91 80 45 85 28 85 127 11 8 51 88 93 27 39 3 11 82 40 4
  13 55 83 73 10 28 2 84 21 5 21 37 69 81 24 0 25 17 83 74 0 82 86 10 20 89 79
  11 30 73 10 1 12 69 20 65 30 7 0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10
  26 76 65 77 31 29 23 29 0 21 27 29 15 72 14 73 30 2 73 1 12 21 0 80 17 92 80
  88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13 68 68 37 70 67)
matasano> (length x)
137
matasano> (* 137 2)
274
matasano> (length (octet-to-hex x))
274
matasano> (iter (for i from 0 to (* 2(length x)) by 2) (collecting (char (octet-to-hex x) i)))
; Evaluation aborted on #<sb-int:invalid-array-index-error expected-type: "(integer 0 (274))"datum: 274>.
matasano> (iter (for i from 0 below (* 2 (length x)) by 2) (collecting (char (octet-to-hex x) i)))
(#\2 #\4 #\1 #\1 #\1 #\0 #\0 #\4 #\5 #\5 #\2 #\5 #\1 #\5 #\7 #\0 #\0 #\3 #\5
 #\5 #\1 #\2 #\0 #\0 #\5 #\2 #\0 #\0 #\3 #\5 #\4 #\0 #\1 #\0 #\5 #\1 #\0 #\1
 #\2 #\4 #\5 #\1 #\0 #\1 #\1 #\5 #\4 #\0 #\5 #\5 #\0 #\1 #\5 #\4 #\0 #\1 #\4
 #\0 #\0 #\0 #\4 #\1 #\4 #\1 #\0 #\0 #\1 #\6 #\5 #\1 #\1 #\0 #\5 #\1 #\5 #\0
 #\0 #\1 #\0 #\0 #\0 #\4 #\0 #\1 #\4 #\4 #\4 #\1 #\1 #\1 #\1 #\0 #\1 #\1 #\1
 #\0 #\4 #\0 #\4 #\1 #\0 #\4 #\0 #\0 #\1 #\0 #\5 #\1 #\5 #\5 #\5 #\5 #\4 #\4
 #\0 #\4 #\1 #\5 #\4 #\4 #\1 #\5 #\4 #\0 #\5 #\0 #\4 #\1 #\4 #\5 #\0 #\0 #\4
 #\4 #\2 #\4 #\4)
matasano> (defparameter e *)
e
matasano> e
(#\2 #\4 #\1 #\1 #\1 #\0 #\0 #\4 #\5 #\5 #\2 #\5 #\1 #\5 #\7 #\0 #\0 #\3 #\5
 #\5 #\1 #\2 #\0 #\0 #\5 #\2 #\0 #\0 #\3 #\5 #\4 #\0 #\1 #\0 #\5 #\1 #\0 #\1
 #\2 #\4 #\5 #\1 #\0 #\1 #\1 #\5 #\4 #\0 #\5 #\5 #\0 #\1 #\5 #\4 #\0 #\1 #\4
 #\0 #\0 #\0 #\4 #\1 #\4 #\1 #\0 #\0 #\1 #\6 #\5 #\1 #\1 #\0 #\5 #\1 #\5 #\0
 #\0 #\1 #\0 #\0 #\0 #\4 #\0 #\1 #\4 #\4 #\4 #\1 #\1 #\1 #\1 #\0 #\1 #\1 #\1
 #\0 #\4 #\0 #\4 #\1 #\0 #\4 #\0 #\0 #\1 #\0 #\5 #\1 #\5 #\5 #\5 #\5 #\4 #\4
 #\0 #\4 #\1 #\5 #\4 #\4 #\1 #\5 #\4 #\0 #\5 #\0 #\4 #\1 #\4 #\5 #\0 #\0 #\4
 #\4 #\2 #\4 #\4)
matasano> (string e)
; Evaluation aborted on #<simple-type-error expected-type: "sb-kernel:string-designator"
                    datum:
                    (#\2 #\4 #\1 #\1 #\1 #\0 #\0 #\4 #\5 #\5 #\2 #\5 #\1 #\5 #\7 #\0 #\0 #\3 #\5 ..)>.
matasano> (map 'string (lambda (x) x) e)
"24111004552515700355120052003540105101245101154055015401400041410016511051500100040144411110111040410400105155554404154415405041450044244"
matasano> (setf e *)
"24111004552515700355120052003540105101245101154055015401400041410016511051500100040144411110111040410400105155554404154415405041450044244"
matasano> (with-open-file (s "./hashdata" :direction :output) (format s "~a" e))
nil
matasano> (position 7 e)
nil
matasano> (position #\7 e)
14
matasano> (position #6 e)
; Evaluation aborted on #<sb-int:simple-reader-error "illegal sharp macro character: ~S" {10051DFE53}>.
matasano> (position #\6 e)
67
matasano> (position #\2 e)
0
matasano> (position #\2 (subseq e 3))
7
matasano> (position #\2 (subseq e 8))
2
matasano> (position #\2 (subseq e 50))
84
matasano> h
#(0 80 17 92 80 88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13
  68 68 37 70 67)
matasano> x
#(39 76 16 18 26 1 0 73 91 80 45 85 28 85 127 11 8 51 88 93 27 39 3 11 82 40 4
  13 55 83 73 10 28 2 84 21 5 21 37 69 81 24 0 25 17 83 74 0 82 86 10 20 89 79
  11 30 73 10 1 12 69 20 65 30 7 0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10
  26 76 65 77 31 29 23 29 0 21 27 29 15 72 14 73 30 2 73 1 12 21 0 80 17 92 80
  88 80 67 66 3 66 19 84 66 76 17 80 67 11 94 9 77 20 73 87 8 13 68 68 37 70 67)
matasano> (find-key-size x)
2 1.34558820
3 1.60740750
4 1.52205880
5 1.41481480
6 1.44696970
7 1.48120300
8 1.58088230
9 1.45925930
10 1.43076920
11 1.47727270
12 1.48484850
13 1.59230770
14 1.39682540
15 1.39259250
16 1.52343750
17 1.55147060
18 1.40476190
19 1.54135330
20 1.56666670
21 1.57936510
22 1.59848490
23 1.21739130
24 1.22500000
25 1.09600000
26 1.20000000
27 1.19259260
28 1.58928570
29 1.61206900
30 1.76666670
31 1.50000000
32 1.57031250
33 1.55303030
34 1.53676470
35 1.10476200
36 1.15740740
37 1.04504500
38 0.93859650
39 0.98290600
40 0.98333335
38
While evaluating the form starting at line 362, column 0
  of #P"/home/arathnim/common-lisp/matasano/matasano.cl":
matasano> (find-key-size x :limit 70)
2 1.34558820
3 1.60740750
4 1.52205880
5 1.41481480
6 1.44696970
7 1.48120300
8 1.58088230
9 1.45925930
10 1.43076920
11 1.47727270
12 1.48484850
13 1.59230770
14 1.39682540
15 1.39259250
16 1.52343750
17 1.55147060
18 1.40476190
19 1.54135330
20 1.56666670
21 1.57936510
22 1.59848490
23 1.21739130
24 1.22500000
25 1.09600000
26 1.20000000
27 1.19259260
28 1.58928570
29 1.61206900
30 1.76666670
31 1.50000000
32 1.57031250
33 1.55303030
34 1.53676470
35 1.10476200
36 1.15740740
37 1.04504500
38 0.93859650
39 0.98290600
40 0.98333335
41 1.06504070
42 0.98412700
43 1.09302330
44 1.18181810
45 1.05185190
46 1.71739130
47 1.64893620
48 1.63541660
49 1.34693870
50 1.43000000
51 1.51960790
52 1.59615390
53 1.46226420
54 1.54629620
55 1.48181820
56 1.57142850
57 1.67543860
58 1.49137930
59 1.51694920
60 1.46666670
61 1.70491800
62 1.56451620
63 1.61111120
64 1.52343750
65 1.45384610
66 1.34090910
67 1.38059700
68 1.52205880
69 0.00000000
70 0.00000000
69
matasano> (find-key-size x :limit 65)
2 1.34558820
3 1.60740750
4 1.52205880
5 1.41481480
6 1.44696970
7 1.48120300
8 1.58088230
9 1.45925930
10 1.43076920
11 1.47727270
12 1.48484850
13 1.59230770
14 1.39682540
15 1.39259250
16 1.52343750
17 1.55147060
18 1.40476190
19 1.54135330
20 1.56666670
21 1.57936510
22 1.59848490
23 1.21739130
24 1.22500000
25 1.09600000
26 1.20000000
27 1.19259260
28 1.58928570
29 1.61206900
30 1.76666670
31 1.50000000
32 1.57031250
33 1.55303030
34 1.53676470
35 1.10476200
36 1.15740740
37 1.04504500
38 0.93859650
39 0.98290600
40 0.98333335
41 1.06504070
42 0.98412700
43 1.09302330
44 1.18181810
45 1.05185190
46 1.71739130
47 1.64893620
48 1.63541660
49 1.34693870
50 1.43000000
51 1.51960790
52 1.59615390
53 1.46226420
54 1.54629620
55 1.48181820
56 1.57142850
57 1.67543860
58 1.49137930
59 1.51694920
60 1.46666670
61 1.70491800
62 1.56451620
63 1.61111120
64 1.52343750
65 1.45384610
38
matasano> (iter (for a in-string "abdefhijklmnopqrstuvwxyz")
					 (collect (xor-decrypt (str-to-octet "abdefhijklmnopqrstuvwxyz") (str-to-octet (string a)))))
((0 3 5 4 7 9 8 11 10 13 12 15 14 17 16 19 18 21 20 23 22 25 24 27)
 (3 0 6 7 4 10 11 8 9 14 15 12 13 18 19 16 17 22 23 20 21 26 27 24)
 (5 6 0 1 2 12 13 14 15 8 9 10 11 20 21 22 23 16 17 18 19 28 29 30)
 (4 7 1 0 3 13 12 15 14 9 8 11 10 21 20 23 22 17 16 19 18 29 28 31)
 (7 4 2 3 0 14 15 12 13 10 11 8 9 22 23 20 21 18 19 16 17 30 31 28)
 (9 10 12 13 14 0 1 2 3 4 5 6 7 24 25 26 27 28 29 30 31 16 17 18)
 (8 11 13 12 15 1 0 3 2 5 4 7 6 25 24 27 26 29 28 31 30 17 16 19)
 (11 8 14 15 12 2 3 0 1 6 7 4 5 26 27 24 25 30 31 28 29 18 19 16)
 (10 9 15 14 13 3 2 1 0 7 6 5 4 27 26 25 24 31 30 29 28 19 18 17)
 (13 14 8 9 10 4 5 6 7 0 1 2 3 28 29 30 31 24 25 26 27 20 21 22)
 (12 15 9 8 11 5 4 7 6 1 0 3 2 29 28 31 30 25 24 27 26 21 20 23)
 (15 12 10 11 8 6 7 4 5 2 3 0 1 30 31 28 29 26 27 24 25 22 23 20)
 (14 13 11 10 9 7 6 5 4 3 2 1 0 31 30 29 28 27 26 25 24 23 22 21)
 (17 18 20 21 22 24 25 26 27 28 29 30 31 0 1 2 3 4 5 6 7 8 9 10)
 (16 19 21 20 23 25 24 27 26 29 28 31 30 1 0 3 2 5 4 7 6 9 8 11)
 (19 16 22 23 20 26 27 24 25 30 31 28 29 2 3 0 1 6 7 4 5 10 11 8)
 (18 17 23 22 21 27 26 25 24 31 30 29 28 3 2 1 0 7 6 5 4 11 10 9)
 (21 22 16 17 18 28 29 30 31 24 25 26 27 4 5 6 7 0 1 2 3 12 13 14)
 (20 23 17 16 19 29 28 31 30 25 24 27 26 5 4 7 6 1 0 3 2 13 12 15)
 (23 20 18 19 16 30 31 28 29 26 27 24 25 6 7 4 5 2 3 0 1 14 15 12)
 (22 21 19 18 17 31 30 29 28 27 26 25 24 7 6 5 4 3 2 1 0 15 14 13)
 (25 26 28 29 30 16 17 18 19 20 21 22 23 8 9 10 11 12 13 14 15 0 1 2)
 (24 27 29 28 31 17 16 19 18 21 20 23 22 9 8 11 10 13 12 15 14 1 0 3)
 (27 24 30 31 28 18 19 16 17 22 23 20 21 10 11 8 9 14 15 12 13 2 3 0))
matasano> (mapcar #'octet-to-hex *)
("000305040709080B0A0D0C0F0E111013121514171619181B"
 "03000607040A0B08090E0F0C0D12131011161714151A1B18"
 "05060001020C0D0E0F08090A0B14151617101112131C1D1E"
 "04070100030D0C0F0E09080B0A15141716111013121D1C1F"
 "07040203000E0F0C0D0A0B080916171415121310111E1F1C"
 "090A0C0D0E000102030405060718191A1B1C1D1E1F101112"
 "080B0D0C0F010003020504070619181B1A1D1C1F1E111013"
 "0B080E0F0C02030001060704051A1B18191E1F1C1D121310"
 "0A090F0E0D03020100070605041B1A19181F1E1D1C131211"
 "0D0E08090A04050607000102031C1D1E1F18191A1B141516"
 "0C0F09080B05040706010003021D1C1F1E19181B1A151417"
 "0F0C0A0B0806070405020300011E1F1C1D1A1B1819161714"
 "0E0D0B0A0907060504030201001F1E1D1C1B1A1918171615"
 "111214151618191A1B1C1D1E1F000102030405060708090A"
 "101315141719181B1A1D1C1F1E010003020504070609080B"
 "13101617141A1B18191E1F1C1D02030001060704050A0B08"
 "12111716151B1A19181F1E1D1C03020100070605040B0A09"
 "15161011121C1D1E1F18191A1B04050607000102030C0D0E"
 "14171110131D1C1F1E19181B1A05040706010003020D0C0F"
 "17141213101E1F1C1D1A1B181906070405020300010E0F0C"
 "16151312111F1E1D1C1B1A191807060504030201000F0E0D"
 "191A1C1D1E101112131415161708090A0B0C0D0E0F000102"
 "181B1D1C1F111013121514171609080B0A0D0C0F0E010003"
 "1B181E1F1C12131011161714150A0B08090E0F0C0D020300")
matasano> (setf k (subseq x (- (length x) (+ 32 40)) (- (length x) 32)))

; in: setf k
;     (SETF MATASANO::K
;             (SUBSEQ MATASANO::X (- (LENGTH MATASANO::X) (+ 32 40))
;                     (- (LENGTH MATASANO::X) 32)))
; ==>
;   (SETQ MATASANO::K
;           (SUBSEQ MATASANO::X (- (LENGTH MATASANO::X) (+ 32 40))
;                   (- (LENGTH MATASANO::X) 32)))
; 
; caught warning:
;   undefined variable: k
; 
; compilation unit finished
;   Undefined variable:
;     k
;   caught 1 WARNING condition
#(0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10 26 76 65 77 31 29 23 29 0 21
  27 29 15 72 14 73 30 2 73 1 12 21)
matasano> k
#(0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10 26 76 65 77 31 29 23 29 0 21
  27 29 15 72 14 73 30 2 73 1 12 21)
matasano> (defun shift-right (seq n) 
				(concatenate 'vector (subseq seq (- (length seq) n) (length seq))
								         (subseq seq 0 (- (length seq) n))))
shift-right
matasano> (defun shift-left (seq n) (concatenate 'vector (subseq seq n (length seq)) (subseq seq 0 n)))
shift-left
matasano> (iter (for x from 0 to 39)
					         (collect (xor-decrypt k (shift-left k x))))

; in: iter (for x from 0 to 39)
;     (MATASANO::XOR-DECRYPT MATASANO::K
;                            (MATASANO::SHIFT-LEFT MATASANO::K MATASANO::X))
; 
; caught warning:
;   undefined variable: k
; 
; compilation unit finished
;   Undefined variable:
;     k
;   caught 1 WARNING condition
((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  0)
 (20 117 59 66 3 25 80 73 67 91 6 18 23 2 5 76 65 16 86 13 12 82 2 10 10 29 21
  14 6 18 71 70 71 87 28 75 72 13 25 21)
 (97 78 121 65 26 73 25 10 24 93 20 5 21 7 73 13 81 70 91 1 94 80 8 0 23 8 27 8
  20 85 1 1 16 75 87 3 69 20 12 1)
 (90 12 122 88 74 0 90 81 30 79 3 7 16 75 8 29 7 75 87 83 92 90 2 29 2 6 29 26
  83 19 70 86 12 0 31 14 92 1 24 116)
 (24 15 99 8 3 67 1 87 12 88 1 2 92 10 24 75 10 71 5 81 86 80 31 8 12 0 15 93
  21 84 17 74 71 72 18 23 73 21 109 79)
 (27 22 51 65 64 24 7 69 27 90 4 78 29 26 78 70 6 21 7 91 92 77 10 6 10 18 72
  27 82 3 13 1 15 69 11 2 93 96 86 13)
 (2 70 122 2 27 30 21 82 25 95 72 15 13 76 67 74 84 23 13 81 65 88 4 0 24 85 14
  92 5 31 70 73 2 92 30 22 40 91 20 14)
 (82 15 57 89 29 12 2 80 28 19 9 31 91 65 79 24 86 29 7 76 84 86 2 18 95 19 73
  11 25 84 14 68 27 73 10 99 19 25 23 23)
 (27 76 98 95 15 27 0 85 80 82 25 73 86 77 29 26 92 23 26 89 90 80 16 85 25 84
  30 23 82 28 3 93 14 93 127 88 81 26 14 71)
 (88 23 100 77 24 25 5 25 17 66 79 68 90 31 31 16 86 10 15 87 92 66 87 19 94 3
  2 92 26 17 26 72 26 40 68 26 82 3 94 14)
 (3 17 118 90 26 28 73 88 1 20 66 72 8 29 21 26 75 31 1 81 78 5 17 84 9 31 73
  20 23 8 15 92 111 19 6 25 75 83 23 77)
 (5 3 97 88 31 80 8 72 87 25 78 26 10 23 31 7 94 17 7 67 9 67 86 3 21 84 1 25
  14 29 27 41 84 81 5 0 27 26 84 22)
 (23 20 99 93 83 17 24 30 90 21 28 24 0 29 2 18 80 23 21 4 79 4 1 31 94 28 12 0
  27 9 110 18 22 82 28 80 82 89 15 16)
 (0 22 102 17 18 1 78 19 86 71 30 18 10 0 23 28 86 5 82 66 8 83 29 84 22 17 21
  21 15 124 85 80 21 75 76 25 17 2 9 2)
 (2 19 42 80 2 87 67 31 4 69 20 24 23 21 25 26 68 66 20 5 95 79 86 28 27 8 0 1
  122 71 23 83 12 27 5 90 74 4 27 21)
 (7 95 107 64 84 90 79 77 6 79 30 5 2 27 31 8 3 4 83 82 67 4 30 17 2 29 20 116
  65 5 20 74 92 82 70 1 76 22 12 23)
 (75 30 123 22 89 86 29 79 12 69 3 16 12 29 13 79 69 67 4 78 8 76 19 8 23 9 97
  79 3 6 13 26 21 17 29 7 94 1 14 18)
 (10 14 45 27 85 4 31 69 6 88 22 30 10 15 74 9 2 20 24 5 64 65 10 29 3 124 90
  13 0 31 93 83 86 74 27 21 73 3 11 94)
 (26 88 32 23 7 6 21 79 27 77 24 24 24 72 12 78 85 8 83 77 77 88 31 9 118 71 24
  14 25 79 20 16 13 76 9 2 75 6 71 31)
 (76 85 44 69 5 12 31 82 14 67 30 10 95 14 75 25 73 67 27 64 84 77 11 124 77 5
  27 23 73 6 87 75 11 94 30 0 78 74 6 15)
 (65 89 126 71 15 6 2 71 0 69 12 77 25 73 28 5 2 11 22 89 65 89 126 71 15 6 2
  71 0 69 12 77 25 73 28 5 2 11 22 89)
 (77 11 124 77 5 27 23 73 6 87 75 11 94 30 0 78 74 6 15 76 85 44 69 5 12 31 82
  14 67 30 10 95 14 75 25 73 67 27 64 84)
 (31 9 118 71 24 14 25 79 20 16 13 76 9 2 75 6 71 31 26 88 32 23 7 6 21 79 27
  77 24 24 24 72 12 78 85 8 83 77 77 88)
 (29 3 124 90 13 0 31 93 83 86 74 27 21 73 3 11 94 10 14 45 27 85 4 31 69 6 88
  22 30 10 15 74 9 2 20 24 5 64 65 10)
 (23 9 97 79 3 6 13 26 21 17 29 7 94 1 14 18 75 30 123 22 89 86 29 79 12 69 3
  16 12 29 13 79 69 67 4 78 8 76 19 8)
 (29 20 116 65 5 20 74 92 82 70 1 76 22 12 23 7 95 107 64 84 90 79 77 6 79 30 5
  2 27 31 8 3 4 83 82 67 4 30 17 2)
 (0 1 122 71 23 83 12 27 5 90 74 4 27 21 2 19 42 80 2 87 67 31 4 69 20 24 23 21
  25 26 68 66 20 5 95 79 86 28 27 8)
 (21 15 124 85 80 21 75 76 25 17 2 9 2 0 22 102 17 18 1 78 19 86 71 30 18 10 0
  23 28 86 5 82 66 8 83 29 84 22 17 21)
 (27 9 110 18 22 82 28 80 82 89 15 16 23 20 99 93 83 17 24 30 90 21 28 24 0 29
  2 18 80 23 21 4 79 4 1 31 94 28 12 0)
 (29 27 41 84 81 5 0 27 26 84 22 5 3 97 88 31 80 8 72 87 25 78 26 10 23 31 7 94
  17 7 67 9 67 86 3 21 84 1 25 14)
 (15 92 111 19 6 25 75 83 23 77 3 17 118 90 26 28 73 88 1 20 66 72 8 29 21 26
  75 31 1 81 78 5 17 84 9 31 73 20 23 8)
 (72 26 40 68 26 82 3 94 14 88 23 100 77 24 25 5 25 17 66 79 68 90 31 31 16 86
  10 15 87 92 66 87 19 94 3 2 92 26 17 26)
 (14 93 127 88 81 26 14 71 27 76 98 95 15 27 0 85 80 82 25 73 86 77 29 26 92 23
  26 89 90 80 16 85 25 84 30 23 82 28 3 93)
 (73 10 99 19 25 23 23 82 15 57 89 29 12 2 80 28 19 9 31 91 65 79 24 86 29 7 76
  84 86 2 18 95 19 73 11 25 84 14 68 27)
 (30 22 40 91 20 14 2 70 122 2 27 30 21 82 25 95 72 15 13 76 67 74 84 23 13 81
  65 88 4 0 24 85 14 92 5 31 70 73 2 92)
 (2 93 96 86 13 27 22 51 65 64 24 7 69 27 90 4 78 29 26 78 70 6 21 7 91 92 77
  10 6 10 18 72 27 82 3 13 1 15 69 11)
 (73 21 109 79 24 15 99 8 3 67 1 87 12 88 1 2 92 10 24 75 10 71 5 81 86 80 31 8
  12 0 15 93 21 84 17 74 71 72 18 23)
 (1 24 116 90 12 122 88 74 0 90 81 30 79 3 7 16 75 8 29 7 75 87 83 92 90 2 29 2
  6 29 26 83 19 70 86 12 0 31 14 92)
 (12 1 97 78 121 65 26 73 25 10 24 93 20 5 21 7 73 13 81 70 91 1 94 80 8 0 23 8
  27 8 20 85 1 1 16 75 87 3 69 20)
 (21 20 117 59 66 3 25 80 73 67 91 6 18 23 2 5 76 65 16 86 13 12 82 2 10 10 29
  21 14 6 18 71 70 71 87 28 75 72 13 25))
matasano> (mapcar #'octet-to-hex (iter (for x from 0 to 39)
					  (collect (xor-decrypt k (shift-left k x)))))

; in: mapcar #'octet-to-hex
;     (MATASANO::XOR-DECRYPT MATASANO::K
;                            (MATASANO::SHIFT-LEFT MATASANO::K MATASANO::X))
; 
; caught warning:
;   undefined variable: k
; 
; compilation unit finished
;   Undefined variable:
;     k
;   caught 1 WARNING condition
("00000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "14753B4203195049435B06121702054C4110560D0C52020A0A1D150E0612474647571C4B480D1915"
 "614E79411A49190A185D14051507490D51465B015E50080017081B0814550101104B570345140C01"
 "5A0C7A584A005A511E4F0307104B081D074B57535C5A021D02061D1A531346560C001F0E5C011874"
 "180F6308034301570C5801025C0A184B0A47055156501F080C000F5D1554114A4748121749156D4F"
 "1B163341401807451B5A044E1D1A4E460615075B5C4D0A060A12481B52030D010F450B025D60560D"
 "02467A021B1E1552195F480F0D4C434A54170D514158040018550E5C051F4649025C1E16285B140E"
 "520F39591D0C02501C13091F5B414F18561D074C545602125F13490B19540E441B490A6313191717"
 "1B4C625F0F1B005550521949564D1D1A5C171A595A50105519541E17521C035D0E5D7F58511A0E47"
 "5817644D1819051911424F445A1F1F10560A0F575C4257135E03025C1A111A481A28441A52035E0E"
 "0311765A1A1C495801144248081D151A4B1F01514E051154091F491417080F5C6F1306194B53174D"
 "050361581F50084857194E1A0A171F075E11074309435603155401190E1D1B29545105001B1A5416"
 "1714635D5311181E5A151C18001D0212501715044F04011F5E1C0C001B096E1216521C5052590F10"
 "0016661112014E1356471E120A00171C5605524208531D54161115150F7C5550154B4C1911020902"
 "02132A500257431F044514181715191A444214055F4F561C1B0800017A4717530C1B055A4A041B15"
 "075F6B40545A4F4D064F1E05021B1F080304535243041E11021D14744105144A5C5246014C160C17"
 "4B1E7B1659561D4F0C4503100C1D0D4F4543044E084C13081709614F03060D1A15111D075E010E12"
 "0A0E2D1B55041F450658161E0A0F4A090214180540410A1D037C5A0D001F5D53564A1B1549030B5E"
 "1A5820170706154F1B4D181818480C4E5508534D4D581F097647180E194F14100D4C09024B06471F"
 "4C552C45050C1F520E431E0A5F0E4B1949431B40544D0B7C4D051B174906574B0B5E1E004E4A060F"
 "41597E470F06024700450C4D19491C05020B165941597E470F06024700450C4D19491C05020B1659"
 "4D0B7C4D051B174906574B0B5E1E004E4A060F4C552C45050C1F520E431E0A5F0E4B1949431B4054"
 "1F097647180E194F14100D4C09024B06471F1A5820170706154F1B4D181818480C4E5508534D4D58"
 "1D037C5A0D001F5D53564A1B1549030B5E0A0E2D1B55041F450658161E0A0F4A090214180540410A"
 "1709614F03060D1A15111D075E010E124B1E7B1659561D4F0C4503100C1D0D4F4543044E084C1308"
 "1D14744105144A5C5246014C160C17075F6B40545A4F4D064F1E05021B1F080304535243041E1102"
 "00017A4717530C1B055A4A041B1502132A500257431F044514181715191A444214055F4F561C1B08"
 "150F7C5550154B4C19110209020016661112014E1356471E120A00171C5605524208531D54161115"
 "1B096E1216521C5052590F101714635D5311181E5A151C18001D0212501715044F04011F5E1C0C00"
 "1D1B29545105001B1A5416050361581F50084857194E1A0A171F075E11074309435603155401190E"
 "0F5C6F1306194B53174D0311765A1A1C495801144248081D151A4B1F01514E051154091F49141708"
 "481A28441A52035E0E5817644D1819051911424F445A1F1F10560A0F575C4257135E03025C1A111A"
 "0E5D7F58511A0E471B4C625F0F1B005550521949564D1D1A5C171A595A50105519541E17521C035D"
 "490A6313191717520F39591D0C02501C13091F5B414F18561D074C545602125F13490B19540E441B"
 "1E16285B140E02467A021B1E1552195F480F0D4C434A54170D514158040018550E5C051F4649025C"
 "025D60560D1B163341401807451B5A044E1D1A4E460615075B5C4D0A060A12481B52030D010F450B"
 "49156D4F180F6308034301570C5801025C0A184B0A47055156501F080C000F5D1554114A47481217"
 "0118745A0C7A584A005A511E4F0307104B081D074B57535C5A021D02061D1A531346560C001F0E5C"
 "0C01614E79411A49190A185D14051507490D51465B015E50080017081B0814550101104B57034514"
 "1514753B4203195049435B06121702054C4110560D0C52020A0A1D150E0612474647571C4B480D19")
matasano> (mapcar #'octet-to-str (iter (for x from 0 to 39)
					  (collect (xor-decrypt k (shift-left k x)))))
; Evaluation aborted on #<undefined-function octet-to-str {1004673D63}>.
matasano> (mapcar #'octet-to-string (iter (for x from 0 to 39)
					  (collect (xor-decrypt k (shift-left k x)))))

; in: mapcar #'octet-to-string
;     (MATASANO::XOR-DECRYPT MATASANO::K
;                            (MATASANO::SHIFT-LEFT MATASANO::K MATASANO::X))
; 
; caught warning:
;   undefined variable: k
; 
; compilation unit finished
;   Undefined variable:
;     k
;   caught 1 WARNING condition
matasano> (mapcar #'octet-to-string (iter (for x from 0 to 39)
					  (collect (xor-decrypt k (shift-right k x)))))

;     (MATASANO::XOR-DECRYPT MATASANO::K
;                            (MATASANO::SHIFT-RIGHT MATASANO::K MATASANO::X))
; 
; caught warning:
;   undefined variable: k
; 
; compilation unit finished
;   Undefined variable:
;     k
;   caught 1 WARNING condition
matasano> k
#(0 20 97 90 24 27 2 82 27 88 3 5 23 0 2 7 75 10 26 76 65 77 31 29 23 29 0 21
  27 29 15 72 14 73 30 2 73 1 12 21)
matasano> 
matasano> 
matasano> 
matasano> 
; No value
matasano> (+ 1 1)
2
matasano> 